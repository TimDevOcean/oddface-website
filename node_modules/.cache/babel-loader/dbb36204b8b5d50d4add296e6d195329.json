{"ast":null,"code":"/**\n * @name ranges-push\n * @fileoverview Gather string index ranges\n * @version 6.1.3\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-push/}\n */\nimport { collWhitespace as y } from \"string-collapse-leading-whitespace\";\nvar b = {\n  strictlyTwoElementsInRangeArrays: !1,\n  progressFn: null\n};\n\nfunction m(a, r) {\n  if (!Array.isArray(a) || !a.length) return a;\n  let t = { ...b,\n    ...r\n  },\n      e,\n      l;\n  if (t.strictlyTwoElementsInRangeArrays && !a.every((o, g) => !Array.isArray(o) || o.length !== 2 ? (e = g, l = o.length, !1) : !0)) throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${e}th range (${JSON.stringify(a[e], null, 4)}) has not two but ${l} elements!`);\n  if (!a.every((o, g) => !Array.isArray(o) || !Number.isInteger(o[0]) || o[0] < 0 || !Number.isInteger(o[1]) || o[1] < 0 ? (e = g, !1) : !0)) throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${e}th range (${JSON.stringify(a[e], null, 4)}) does not consist of only natural numbers!`);\n  let n = a.length ** 2,\n      i = 0;\n  return Array.from(a).sort((o, g) => (t.progressFn && (i += 1, t.progressFn(Math.floor(i * 100 / n))), o[0] === g[0] ? o[1] < g[1] ? -1 : o[1] > g[1] ? 1 : 0 : o[0] < g[0] ? -1 : 1));\n}\n\nvar d = \"6.1.3\";\nvar c = {\n  mergeType: 1,\n  progressFn: null,\n  joinRangesThatTouchEdges: !0\n};\n\nfunction f(a, r) {\n  function t(s) {\n    return !!s && typeof s == \"object\" && !Array.isArray(s);\n  }\n\n  if (!Array.isArray(a) || !a.length) return null;\n  let e;\n  if (r) {\n    if (t(r)) {\n      if (e = { ...c,\n        ...r\n      }, e.progressFn && t(e.progressFn) && !Object.keys(e.progressFn).length) e.progressFn = null;else if (e.progressFn && typeof e.progressFn != \"function\") throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: \"${typeof e.progressFn}\", equal to ${JSON.stringify(e.progressFn, null, 4)}`);\n      if (![1, 2, \"1\", \"2\"].includes(e.mergeType)) throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof e.mergeType}\", equal to ${JSON.stringify(e.mergeType, null, 4)}`);\n      if (typeof e.joinRangesThatTouchEdges != \"boolean\") throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof e.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(e.joinRangesThatTouchEdges, null, 4)}`);\n    } else throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r, null, 4)} (type ${typeof r})`);\n  } else e = { ...c\n  };\n  let l = a.filter(s => Array.isArray(s)).map(s => [...s]).filter(s => s[2] !== void 0 || s[0] !== s[1]),\n      n,\n      i,\n      o;\n  e.progressFn ? n = m(l, {\n    progressFn: s => {\n      o = Math.floor(s / 5), o !== i && (i = o, e.progressFn(o));\n    }\n  }) : n = m(l);\n  let g = n.length - 1;\n\n  for (let s = g; s > 0; s--) e.progressFn && (o = Math.floor((1 - s / g) * 78) + 21, o !== i && o > i && (i = o, e.progressFn(o))), (n[s][0] <= n[s - 1][0] || !e.joinRangesThatTouchEdges && n[s][0] < n[s - 1][1] || e.joinRangesThatTouchEdges && n[s][0] <= n[s - 1][1]) && (n[s - 1][0] = Math.min(n[s][0], n[s - 1][0]), n[s - 1][1] = Math.max(n[s][1], n[s - 1][1]), n[s][2] !== void 0 && (n[s - 1][0] >= n[s][0] || n[s - 1][1] <= n[s][1]) && n[s - 1][2] !== null && (n[s][2] === null && n[s - 1][2] !== null ? n[s - 1][2] = null : n[s - 1][2] != null ? +e.mergeType == 2 && n[s - 1][0] === n[s][0] ? n[s - 1][2] = n[s][2] : n[s - 1][2] += n[s][2] : n[s - 1][2] = n[s][2]), n.splice(s, 1), s = n.length);\n\n  return n.length ? n : null;\n}\n\nvar I = d;\n\nfunction u(a) {\n  return a != null;\n}\n\nfunction p(a) {\n  return Number.isInteger(a) && a >= 0;\n}\n\nfunction h(a) {\n  return typeof a == \"string\";\n}\n\nvar T = {\n  limitToBeAddedWhitespace: !1,\n  limitLinebreaksCount: 1,\n  mergeType: 1\n},\n    $ = class {\n  constructor(r) {\n    let t = { ...T,\n      ...r\n    };\n    if (t.mergeType && t.mergeType !== 1 && t.mergeType !== 2) if (h(t.mergeType) && t.mergeType.trim() === \"1\") t.mergeType = 1;else if (h(t.mergeType) && t.mergeType.trim() === \"2\") t.mergeType = 2;else throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof t.mergeType}\", equal to ${JSON.stringify(t.mergeType, null, 4)}`);\n    this.opts = t, this.ranges = [];\n  }\n\n  ranges;\n  opts;\n\n  add(r, t, e) {\n    if (r == null && t == null) return;\n\n    if (u(r) && !u(t)) {\n      if (Array.isArray(r)) {\n        if (r.length) {\n          if (r.some(i => Array.isArray(i))) {\n            r.forEach(i => {\n              Array.isArray(i) && this.add(...i);\n            });\n            return;\n          }\n\n          r.length && p(+r[0]) && p(+r[1]) && this.add(...r);\n        }\n\n        return;\n      }\n\n      throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, \"from\" is set (${JSON.stringify(r, null, 0)}) but second-one, \"to\" is not (${JSON.stringify(t, null, 0)})`);\n    } else if (!u(r) && u(t)) throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, \"to\" is set (${JSON.stringify(t, null, 0)}) but first-one, \"from\" is not (${JSON.stringify(r, null, 0)})`);\n\n    let l = +r,\n        n = +t;\n\n    if (p(e) && (e = String(e)), p(l) && p(n)) {\n      if (u(e) && !h(e) && !p(e)) throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof e}, equal to:\n${JSON.stringify(e, null, 4)}`);\n\n      if (u(this.ranges) && Array.isArray(this.last()) && l === this.last()[1]) {\n        if (this.last()[1] = n, this.last()[2], this.last()[2] !== null && u(e)) {\n          let i = this.last()[2] && this.last()[2].length && (!this.opts || !this.opts.mergeType || this.opts.mergeType === 1) ? `${this.last()[2]}${e}` : e;\n          this.opts.limitToBeAddedWhitespace && (i = y(i, this.opts.limitLinebreaksCount)), h(i) && !i.length || (this.last()[2] = i);\n        }\n      } else {\n        this.ranges || (this.ranges = []);\n        let i = e !== void 0 && !(h(e) && !e.length) ? [l, n, e && this.opts.limitToBeAddedWhitespace ? y(e, this.opts.limitLinebreaksCount) : e] : [l, n];\n        this.ranges.push(i);\n      }\n    } else throw p(l) && l >= 0 ? new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] \"to\" value, the second input argument, must be a natural number or zero! Currently it's of a type \"${typeof n}\" equal to: ${JSON.stringify(n, null, 4)}`) : new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] \"from\" value, the first input argument, must be a natural number or zero! Currently it's of a type \"${typeof l}\" equal to: ${JSON.stringify(l, null, 4)}`);\n  }\n\n  push(r, t, e) {\n    this.add(r, t, e);\n  }\n\n  current() {\n    return Array.isArray(this.ranges) && this.ranges.length ? (this.ranges = f(this.ranges, {\n      mergeType: this.opts.mergeType\n    }), this.ranges && this.opts.limitToBeAddedWhitespace ? this.ranges.map(r => u(r[2]) ? [r[0], r[1], y(r[2], this.opts.limitLinebreaksCount)] : r) : this.ranges) : null;\n  }\n\n  wipe() {\n    this.ranges = [];\n  }\n\n  replace(r) {\n    if (Array.isArray(r) && r.length) {\n      if (Array.isArray(r[0]) && p(r[0][0])) this.ranges = Array.from(r);else throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(r[0], null, 4)} should be an array and its first element should be an integer, a string index.`);\n    } else this.ranges = [];\n  }\n\n  last() {\n    return Array.isArray(this.ranges) && this.ranges.length ? this.ranges[this.ranges.length - 1] : null;\n  }\n\n};\nexport { $ as Ranges, T as defaults, I as version };\n/**\n * @name ranges-sort\n * @fileoverview Sort string index ranges\n * @version 5.0.13\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-sort/}\n */","map":{"version":3,"names":["collWhitespace","y","b","strictlyTwoElementsInRangeArrays","progressFn","m","a","r","Array","isArray","length","t","e","l","every","o","g","TypeError","JSON","stringify","Number","isInteger","n","i","from","sort","Math","floor","d","c","mergeType","joinRangesThatTouchEdges","f","s","Object","keys","Error","includes","filter","map","min","max","splice","I","u","p","h","T","limitToBeAddedWhitespace","limitLinebreaksCount","$","constructor","trim","opts","ranges","add","some","forEach","String","last","push","current","wipe","replace","Ranges","defaults","version"],"sources":["/Users/TIM/Desktop/DEXTOP/CODE PROJECTS/oddface/node_modules/ranges-push/dist/ranges-push.esm.js"],"sourcesContent":["/**\n * @name ranges-push\n * @fileoverview Gather string index ranges\n * @version 6.1.3\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-push/}\n */\n\nimport{collWhitespace as y}from\"string-collapse-leading-whitespace\";var b={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function m(a,r){if(!Array.isArray(a)||!a.length)return a;let t={...b,...r},e,l;if(t.strictlyTwoElementsInRangeArrays&&!a.every((o,g)=>!Array.isArray(o)||o.length!==2?(e=g,l=o.length,!1):!0))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${e}th range (${JSON.stringify(a[e],null,4)}) has not two but ${l} elements!`);if(!a.every((o,g)=>!Array.isArray(o)||!Number.isInteger(o[0])||o[0]<0||!Number.isInteger(o[1])||o[1]<0?(e=g,!1):!0))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${e}th range (${JSON.stringify(a[e],null,4)}) does not consist of only natural numbers!`);let n=a.length**2,i=0;return Array.from(a).sort((o,g)=>(t.progressFn&&(i+=1,t.progressFn(Math.floor(i*100/n))),o[0]===g[0]?o[1]<g[1]?-1:o[1]>g[1]?1:0:o[0]<g[0]?-1:1))}var d=\"6.1.3\";var c={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function f(a,r){function t(s){return!!s&&typeof s==\"object\"&&!Array.isArray(s)}if(!Array.isArray(a)||!a.length)return null;let e;if(r)if(t(r)){if(e={...c,...r},e.progressFn&&t(e.progressFn)&&!Object.keys(e.progressFn).length)e.progressFn=null;else if(e.progressFn&&typeof e.progressFn!=\"function\")throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: \"${typeof e.progressFn}\", equal to ${JSON.stringify(e.progressFn,null,4)}`);if(![1,2,\"1\",\"2\"].includes(e.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof e.mergeType}\", equal to ${JSON.stringify(e.mergeType,null,4)}`);if(typeof e.joinRangesThatTouchEdges!=\"boolean\")throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof e.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(e.joinRangesThatTouchEdges,null,4)}`)}else throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);else e={...c};let l=a.filter(s=>Array.isArray(s)).map(s=>[...s]).filter(s=>s[2]!==void 0||s[0]!==s[1]),n,i,o;e.progressFn?n=m(l,{progressFn:s=>{o=Math.floor(s/5),o!==i&&(i=o,e.progressFn(o))}}):n=m(l);let g=n.length-1;for(let s=g;s>0;s--)e.progressFn&&(o=Math.floor((1-s/g)*78)+21,o!==i&&o>i&&(i=o,e.progressFn(o))),(n[s][0]<=n[s-1][0]||!e.joinRangesThatTouchEdges&&n[s][0]<n[s-1][1]||e.joinRangesThatTouchEdges&&n[s][0]<=n[s-1][1])&&(n[s-1][0]=Math.min(n[s][0],n[s-1][0]),n[s-1][1]=Math.max(n[s][1],n[s-1][1]),n[s][2]!==void 0&&(n[s-1][0]>=n[s][0]||n[s-1][1]<=n[s][1])&&n[s-1][2]!==null&&(n[s][2]===null&&n[s-1][2]!==null?n[s-1][2]=null:n[s-1][2]!=null?+e.mergeType==2&&n[s-1][0]===n[s][0]?n[s-1][2]=n[s][2]:n[s-1][2]+=n[s][2]:n[s-1][2]=n[s][2]),n.splice(s,1),s=n.length);return n.length?n:null}var I=d;function u(a){return a!=null}function p(a){return Number.isInteger(a)&&a>=0}function h(a){return typeof a==\"string\"}var T={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},$=class{constructor(r){let t={...T,...r};if(t.mergeType&&t.mergeType!==1&&t.mergeType!==2)if(h(t.mergeType)&&t.mergeType.trim()===\"1\")t.mergeType=1;else if(h(t.mergeType)&&t.mergeType.trim()===\"2\")t.mergeType=2;else throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof t.mergeType}\", equal to ${JSON.stringify(t.mergeType,null,4)}`);this.opts=t,this.ranges=[]}ranges;opts;add(r,t,e){if(r==null&&t==null)return;if(u(r)&&!u(t)){if(Array.isArray(r)){if(r.length){if(r.some(i=>Array.isArray(i))){r.forEach(i=>{Array.isArray(i)&&this.add(...i)});return}r.length&&p(+r[0])&&p(+r[1])&&this.add(...r)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, \"from\" is set (${JSON.stringify(r,null,0)}) but second-one, \"to\" is not (${JSON.stringify(t,null,0)})`)}else if(!u(r)&&u(t))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, \"to\" is set (${JSON.stringify(t,null,0)}) but first-one, \"from\" is not (${JSON.stringify(r,null,0)})`);let l=+r,n=+t;if(p(e)&&(e=String(e)),p(l)&&p(n)){if(u(e)&&!h(e)&&!p(e))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`);if(u(this.ranges)&&Array.isArray(this.last())&&l===this.last()[1]){if(this.last()[1]=n,this.last()[2],this.last()[2]!==null&&u(e)){let i=this.last()[2]&&this.last()[2].length&&(!this.opts||!this.opts.mergeType||this.opts.mergeType===1)?`${this.last()[2]}${e}`:e;this.opts.limitToBeAddedWhitespace&&(i=y(i,this.opts.limitLinebreaksCount)),h(i)&&!i.length||(this.last()[2]=i)}}else{this.ranges||(this.ranges=[]);let i=e!==void 0&&!(h(e)&&!e.length)?[l,n,e&&this.opts.limitToBeAddedWhitespace?y(e,this.opts.limitLinebreaksCount):e]:[l,n];this.ranges.push(i)}}else throw p(l)&&l>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] \"to\" value, the second input argument, must be a natural number or zero! Currently it's of a type \"${typeof n}\" equal to: ${JSON.stringify(n,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] \"from\" value, the first input argument, must be a natural number or zero! Currently it's of a type \"${typeof l}\" equal to: ${JSON.stringify(l,null,4)}`)}push(r,t,e){this.add(r,t,e)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=f(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(r=>u(r[2])?[r[0],r[1],y(r[2],this.opts.limitLinebreaksCount)]:r):this.ranges):null}wipe(){this.ranges=[]}replace(r){if(Array.isArray(r)&&r.length)if(Array.isArray(r[0])&&p(r[0][0]))this.ranges=Array.from(r);else throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(r[0],null,4)} should be an array and its first element should be an integer, a string index.`);else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}};export{$ as Ranges,T as defaults,I as version};\n/**\n * @name ranges-sort\n * @fileoverview Sort string index ranges\n * @version 5.0.13\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-sort/}\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}