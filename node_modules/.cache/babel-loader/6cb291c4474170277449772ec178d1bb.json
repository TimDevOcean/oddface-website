{"ast":null,"code":"/**\n * @name ranges-apply\n * @fileoverview Take an array of string index ranges, delete/replace the string according to them\n * @version 6.1.3\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-apply/}\n */\nimport { rMerge as b } from \"ranges-merge\";\nimport w from \"tiny-invariant\";\nvar f = \"6.1.3\";\nvar v = f;\n\nfunction x(s, r, n) {\n  let t = 0,\n      o = 0;\n  if (arguments.length === 0) throw new Error(\"ranges-apply: [THROW_ID_01] inputs missing!\");\n  if (typeof s != \"string\") throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s, null, 4)}`);\n  if (r && !Array.isArray(r)) throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r, null, 4)}`);\n  if (n && typeof n != \"function\") throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof n}, equal to: ${JSON.stringify(n, null, 4)}`);\n  if (!r || !r.filter(e => e).length) return s;\n  let a;\n  Array.isArray(r) && Number.isInteger(r[0]) && Number.isInteger(r[1]) ? a = [Array.from(r)] : a = Array.from(r);\n  let g = a.length,\n      c = 0;\n  a.filter(e => e).forEach((e, i) => {\n    if (n && (t = Math.floor(c / g * 10), t !== o && (o = t, n(t))), !Array.isArray(e)) throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${i}th element not an array: ${JSON.stringify(e, null, 4)}, which is ${typeof e}`);\n\n    if (!Number.isInteger(e[0])) {\n      if (!Number.isInteger(+e[0]) || +e[0] < 0) throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${i}th element, array ${JSON.stringify(e, null, 0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0], null, 4)}.`);\n      a[i][0] = +a[i][0];\n    }\n\n    if (!Number.isInteger(e[1])) {\n      if (!Number.isInteger(+e[1]) || +e[1] < 0) throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${i}th element, array ${JSON.stringify(e, null, 0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1], null, 4)}.`);\n      a[i][1] = +a[i][1];\n    }\n\n    c += 1;\n  });\n  let p = b(a, {\n    progressFn: e => {\n      n && (t = 10 + Math.floor(e / 10), t !== o && (o = t, n(t)));\n    }\n  });\n  w(p);\n  let y = p.length;\n\n  if (y > 0) {\n    let e = s.slice(p[y - 1][1]);\n    s = p.reduce((i, $, l, u) => {\n      n && (t = 20 + Math.floor(l / y * 80), t !== o && (o = t, n(t)));\n      let d = l === 0 ? 0 : u[l - 1][1],\n          m = u[l][0];\n      return `${i}${s.slice(d, m)}${u[l][2] || \"\"}`;\n    }, \"\"), s += e;\n  }\n\n  return s;\n}\n\nexport { x as rApply, v as version };","map":{"version":3,"names":["rMerge","b","w","f","v","x","s","r","n","t","o","arguments","length","Error","TypeError","JSON","stringify","Array","isArray","filter","e","a","Number","isInteger","from","g","c","forEach","i","Math","floor","p","progressFn","y","slice","reduce","$","l","u","d","m","rApply","version"],"sources":["/Users/TIM/Desktop/DEXTOP/CODE PROJECTS/oddface/node_modules/ranges-apply/dist/ranges-apply.esm.js"],"sourcesContent":["/**\n * @name ranges-apply\n * @fileoverview Take an array of string index ranges, delete/replace the string according to them\n * @version 6.1.3\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-apply/}\n */\n\nimport{rMerge as b}from\"ranges-merge\";import w from\"tiny-invariant\";var f=\"6.1.3\";var v=f;function x(s,r,n){let t=0,o=0;if(arguments.length===0)throw new Error(\"ranges-apply: [THROW_ID_01] inputs missing!\");if(typeof s!=\"string\")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s,null,4)}`);if(r&&!Array.isArray(r))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(n&&typeof n!=\"function\")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof n}, equal to: ${JSON.stringify(n,null,4)}`);if(!r||!r.filter(e=>e).length)return s;let a;Array.isArray(r)&&Number.isInteger(r[0])&&Number.isInteger(r[1])?a=[Array.from(r)]:a=Array.from(r);let g=a.length,c=0;a.filter(e=>e).forEach((e,i)=>{if(n&&(t=Math.floor(c/g*10),t!==o&&(o=t,n(t))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${i}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])){if(!Number.isInteger(+e[0])||+e[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${i}th element, array ${JSON.stringify(e,null,0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}.`);a[i][0]=+a[i][0]}if(!Number.isInteger(e[1])){if(!Number.isInteger(+e[1])||+e[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${i}th element, array ${JSON.stringify(e,null,0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}.`);a[i][1]=+a[i][1]}c+=1});let p=b(a,{progressFn:e=>{n&&(t=10+Math.floor(e/10),t!==o&&(o=t,n(t)))}});w(p);let y=p.length;if(y>0){let e=s.slice(p[y-1][1]);s=p.reduce((i,$,l,u)=>{n&&(t=20+Math.floor(l/y*80),t!==o&&(o=t,n(t)));let d=l===0?0:u[l-1][1],m=u[l][0];return`${i}${s.slice(d,m)}${u[l][2]||\"\"}`},\"\"),s+=e}return s}export{x as rApply,v as version};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}