{"ast":null,"code":"import Commerce from'@chec/commerce.js';var checAPIKey=process.env.REACT_APP_CHEC_PUBLIC_KEY;var devEnvironment=process.env.NODE_ENV==='development';var commerceConfig={axiosConfig:{headers:{'X-Chec-Agent':'commerce.js/v2','Chec-Version':'2021-09-29'}}};if(devEnvironment&&!checAPIKey){throw Error('Your public API key must be provided as an environment variable named NEXT_PUBLIC_CHEC_PUBLIC_KEY. Obtain your Chec public key by logging into your Chec account and navigate to Setup > Developer, or can be obtained with the Chec CLI via with the command chec whoami');}export default new Commerce(checAPIKey,devEnvironment,commerceConfig);","map":{"version":3,"names":["Commerce","checAPIKey","process","env","REACT_APP_CHEC_PUBLIC_KEY","devEnvironment","NODE_ENV","commerceConfig","axiosConfig","headers","Error"],"sources":["/Users/TIM/Desktop/DEXTOP/CODE PROJECTS/oddface/src/lib/commerce.js"],"sourcesContent":["import Commerce from '@chec/commerce.js';\n\nconst checAPIKey = process.env.REACT_APP_CHEC_PUBLIC_KEY;\nconst devEnvironment = process.env.NODE_ENV === 'development';\n\nconst commerceConfig = {\n  axiosConfig: {\n    headers: {\n      'X-Chec-Agent': 'commerce.js/v2',\n      'Chec-Version': '2021-09-29',\n    },\n  },\n};\n\nif (devEnvironment && !checAPIKey) {\n  throw Error('Your public API key must be provided as an environment variable named NEXT_PUBLIC_CHEC_PUBLIC_KEY. Obtain your Chec public key by logging into your Chec account and navigate to Setup > Developer, or can be obtained with the Chec CLI via with the command chec whoami');\n}\n\nexport default new Commerce(\n  checAPIKey,\n  devEnvironment,\n  commerceConfig,\n);"],"mappings":"AAAA,MAAOA,SAAP,KAAqB,mBAArB,CAEA,GAAMC,WAAU,CAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA/B,CACA,GAAMC,eAAc,CAAGH,OAAO,CAACC,GAAR,CAAYG,QAAZ,GAAyB,aAAhD,CAEA,GAAMC,eAAc,CAAG,CACrBC,WAAW,CAAE,CACXC,OAAO,CAAE,CACP,eAAgB,gBADT,CAEP,eAAgB,YAFT,CADE,CADQ,CAAvB,CASA,GAAIJ,cAAc,EAAI,CAACJ,UAAvB,CAAmC,CACjC,KAAMS,MAAK,CAAC,2QAAD,CAAX,CACD,CAED,cAAe,IAAIV,SAAJ,CACbC,UADa,CAEbI,cAFa,CAGbE,cAHa,CAAf"},"metadata":{},"sourceType":"module"}